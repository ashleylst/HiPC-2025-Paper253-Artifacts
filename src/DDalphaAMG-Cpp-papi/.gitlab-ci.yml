# This file is a template, and might need editing before it works on your project.
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/C++.gitlab-ci.yml

# use the official gcc image, based on debian
# can use versions as well, like gcc:5.2
# see https://hub.docker.com/_/gcc/

image: ubuntu

.install-prerequisites: &install_prerequisites
  before_script:
    - apt update && apt -y install cmake mpich
    - apt -y install libblas-dev liblapack-dev

build:
  stage: build
  # instead of calling g++ directly you can also use some build toolkit like make
  # install the necessary build tools when needed
  # before_script:
  #   - apt update && apt -y install make autoconf
  <<: *install_prerequisites
  script:
    - mkdir cmake-build-debug
    - cd ./cmake-build-debug
    - cmake -DCMAKE_BUILD_TYPE=Debug ../
    - cmake --build . --target ddalphaamg -j 14
  artifacts:
    paths:
      - cmake-build-debug/

# run tests using the binary built before
test:
  stage: test
  <<: *install_prerequisites
  script:
    - cd ./cmake-build-debug
    - ./ddalphaamg ../sample.ini
    - ./ddalphaamg --gtest_filter=LevelTest.CheckResidual ../sample.ini
    - ./ddalphaamg --gtest_filter=BlockTest.CheckSolve ../sample.ini
  dependencies:
    - build
  artifacts:
    paths:
      - cmake-build-debug/

